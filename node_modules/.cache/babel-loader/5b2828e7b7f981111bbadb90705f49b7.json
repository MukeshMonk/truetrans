{"ast":null,"code":"var _jsxFileName = \"D:\\\\truetrans\\\\true\\\\src\\\\componets\\\\Registration\\\\Registration.js\";\nimport React from 'react';\nimport '../Registration/Registration.css';\nimport { Link } from 'react-router-dom';\nimport base64 from 'base-64';\nimport FlashMessage from 'react-flash-message';\nimport axios from 'axios';\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {},\n      name: '',\n      email: '',\n      mobileno: '',\n      verifyno: '',\n      password: '',\n      re_password: '',\n      loading: false,\n      message: false,\n      request_time: '',\n      otp: '' // data:[]\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.sendMobileVerifyOtp = this.sendMobileVerifyOtp.bind(this);\n    this.RegistrationDetailSend = this.RegistrationDetailSend.bind(this);\n  } // handleChange(e) {\n  //   this.setState({ [e.target.name]: e.target.value });\n  // }\n\n\n  sendMobileVerifyOtp(e) {\n    e.preventDefault();\n    const mobileno = this.state.mobileno;\n    this.setState({\n      loading: true,\n      message: true\n    }); // const passdata = mobileno\n\n    let formData = new FormData();\n    formData.append('mobile', mobileno);\n    let init = {\n      method: 'POST',\n      headers: {\n        'content-type': 'multipart/form-data'\n      },\n      mode: 'cors',\n      cache: 'default',\n      dataType: 'json',\n      type: 'POST',\n      async: true\n    };\n    axios.post('/tps_api/index.php?view=mobile_verify', formData, init).then(response => {\n      // const messages =  <FlashMessage duration={2000} persistOnHover={true}>\n      // <span className=\"sendmsg\">OTP Send Successfully!!!</span>\n      //   </FlashMessage>;\n      //alert(response.data.MSG);\n      const tm = response.data.request_time;\n      const otp = response.data.data; //967094\n      // var encoded = 'OTY3MDk0';\n\n      var bytes = base64.decode(otp); // var text = utf8.decode(bytes);\n\n      console.log(\"decode:->\" + bytes); //  const hexString = otp.toString(16);\n      //  alert(hexString);\n      //   const yourNumber = parseInt(hexString, 16);\n      //   alert(yourNumber);\n      //formData.append('time', tm);\n      // const items = res.data;\n      // this.setState({tm});\n      // console.log(response.data.request_time);\n      // alert(response.data.data2);\n\n      this.setState({\n        request_time: tm,\n        otp: otp\n      }); // console.log(this.state.request_time)\n      // console.log(this.state.otp)\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        loading: false,\n        message: false\n      });\n    });\n  }\n\n  RegistrationDetailSend() {\n    let init = {\n      method: 'POST',\n      headers: {\n        'content-type': 'multipart/form-data'\n      },\n      mode: 'cors',\n      cache: 'default',\n      dataType: 'json',\n      type: 'POST',\n      async: true\n    };\n    const name = this.state.name;\n    const email = this.state.email;\n    const mobileno = this.state.mobileno;\n    const verifyno = this.state.verifyno;\n    const password = this.state.password;\n    const re_password = this.state.re_password;\n    let formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('mobile', mobileno);\n    formData.append('verifyno', verifyno);\n    formData.append('password', password);\n    formData.append('re_password', re_password);\n    axios.post('/tps_api/index.php?view=mobile_verify', formData, init).then(response => {\n      console.log(response.data);\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n  /**VALIDATION REGISTRATION FORM HERE..... */\n\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Name\n\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"*Name is required\";\n    }\n\n    if (typeof fields[\"name\"] !== \"undefined\") {\n      if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"name\"] = \"Only letters Allow\";\n      }\n    } //Email\n\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"*Email is Required\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n\n    if (!fields[\"verifyno\"]) {\n      formIsValid = false;\n      errors[\"verifyno\"] = \"*Verify Code Required\";\n    }\n\n    if (typeof fields[\"verifyno\"] !== \"undefined\") {\n      if (!fields[\"verifyno\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"verifyno\"] = \"Only Digits Allow\";\n      }\n    }\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"*Password Is Required\";\n    }\n\n    if (!fields[\"cpassword\"]) {\n      formIsValid = false;\n      errors[\"cpassword\"] = \"*Conform Password Is Required\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      alert(\"Form submitted\");\n    } else {\n      alert(\"Form has errors.\");\n    }\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"background1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"background3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"registerForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"hgroup\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"True Transport Register\")), React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"name\",\n      className: \"tname\",\n      value: this.state.fields[\"name\"],\n      onChange: this.handleChange.bind(this, \"name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, this.state.errors.name)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      className: \"temail\",\n      value: this.state.fields[\"email\"],\n      onChange: this.handleChange.bind(this, \"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, this.state.errors.email)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Mobile No\",\n      name: \"mobileno\",\n      className: \"tmobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"rbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.sendMobileVerifyOtp,\n      className: \"btn btn-deluge btn-sm\",\n      id: \"verifymobileno\",\n      name: \"verifymobileno\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Send OTP\"), this.state.message && this.state.mobileno !== '' && success, this.state.message && this.state.mobileno === '' && error), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Verify Code\",\n      name: \"verifyno\",\n      className: \"tvcode\",\n      value: this.state.fields[\"verifyno\"],\n      onChange: this.handleChange.bind(this, \"verifyno\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, this.state.errors.verifyno)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      className: \"tpass\",\n      value: this.state.fields[\"password\"],\n      onChange: this.handleChange.bind(this, \"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, this.state.errors.password)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"cpassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"re_password\",\n      className: \"tpass\",\n      value: this.state.fields[\"cpassword\"],\n      onChange: this.handleChange.bind(this, \"cpassword\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, this.state.errors.cpassword)), React.createElement(\"button\", {\n      onClick: this.contactSubmit.bind(this),\n      type: \"button\",\n      className: \"buttonui \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \" Register \"), React.createElement(\"div\", {\n      className: \"ripples buttonRipples\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ripplesCircle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"powered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"You have Already Account?\", React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nconst success = React.createElement(FlashMessage, {\n  duration: 2000,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 282\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"sendmsg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 283\n  },\n  __self: this\n}, \"OTP Send Successfully!!!\"));\nconst error = React.createElement(FlashMessage, {\n  duration: 2000,\n  persistOnHover: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 286\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"errormsg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 287\n  },\n  __self: this\n}, \"Please Enter Mobile Number\"));\nexport default Registration;","map":{"version":3,"sources":["D:\\truetrans\\true\\src\\componets\\Registration\\Registration.js"],"names":["React","Link","base64","FlashMessage","axios","Registration","Component","constructor","props","state","fields","errors","name","email","mobileno","verifyno","password","re_password","loading","message","request_time","otp","handleChange","bind","sendMobileVerifyOtp","RegistrationDetailSend","e","preventDefault","setState","formData","FormData","append","init","method","headers","mode","cache","dataType","type","async","post","then","response","tm","data","bytes","decode","console","log","catch","err","handleValidation","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","contactSubmit","alert","field","target","value","render","success","error","cpassword"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,IAAI,EAAC,EAHI;AAITC,MAAAA,KAAK,EAAC,EAJG;AAKTC,MAAAA,QAAQ,EAAC,EALA;AAMTC,MAAAA,QAAQ,EAAC,EANA;AAOTC,MAAAA,QAAQ,EAAC,EAPA;AAQTC,MAAAA,WAAW,EAAC,EARH;AASTC,MAAAA,OAAO,EAAC,KATC;AAUTC,MAAAA,OAAO,EAAC,KAVC;AAWTC,MAAAA,YAAY,EAAC,EAXJ;AAYTC,MAAAA,GAAG,EAAC,EAZK,CAaT;;AAbS,KAAb;AAgBA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKE,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BF,IAA5B,CAAiC,IAAjC,CAA9B;AACD,GAtBmC,CAwBpC;AACA;AACA;;;AAEAC,EAAAA,mBAAmB,CAACE,CAAD,EAAI;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMb,QAAQ,GAAE,KAAKL,KAAL,CAAWK,QAA3B;AAEA,SAAKc,QAAL,CAAc;AACZV,MAAAA,OAAO,EAAC,IADI;AAEZC,MAAAA,OAAO,EAAC;AAFI,KAAd,EAJqB,CAQtB;;AACC,QAAIU,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BjB,QAA1B;AACA,QAAIkB,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFA;AAGTC,MAAAA,IAAI,EAAE,MAHG;AAITC,MAAAA,KAAK,EAAE,SAJE;AAKTC,MAAAA,QAAQ,EAAE,MALD;AAMTC,MAAAA,IAAI,EAAM,MAND;AAOTC,MAAAA,KAAK,EAAK;AAPD,KAAX;AAWAnC,IAAAA,KAAK,CAACoC,IAAN,CAAW,uCAAX,EAAmDX,QAAnD,EAA4DG,IAA5D,EACCS,IADD,CACMC,QAAQ,IAAI;AAChB;AACA;AACA;AACA;AACA,YAAMC,EAAE,GAAGD,QAAQ,CAACE,IAAT,CAAcxB,YAAzB;AACA,YAAMC,GAAG,GAAGqB,QAAQ,CAACE,IAAT,CAAcA,IAA1B,CANgB,CAOhB;AACA;;AACA,UAAIC,KAAK,GAAG3C,MAAM,CAAC4C,MAAP,CAAczB,GAAd,CAAZ,CATgB,CAUhB;;AACA0B,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAYH,KAAxB,EAXgB,CAYlB;AACA;AACA;AACA;AACE;AACD;AACC;AACD;AACA;;AACC,WAAKjB,QAAL,CAAc;AACZR,QAAAA,YAAY,EAACuB,EADD;AAEZtB,QAAAA,GAAG,EAACA;AAFQ,OAAd,EArBgB,CAyBhB;AACA;AACD,KA5BD,EA6BC4B,KA7BD,CA6BOC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,WAAKtB,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAC,KADI;AAEZC,QAAAA,OAAO,EAAC;AAFI,OAAd;AAKD,KApCD;AAsCD;;AAEDM,EAAAA,sBAAsB,GAAE;AACtB,QAAIO,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFA;AAGTC,MAAAA,IAAI,EAAE,MAHG;AAITC,MAAAA,KAAK,EAAE,SAJE;AAKTC,MAAAA,QAAQ,EAAE,MALD;AAMTC,MAAAA,IAAI,EAAM,MAND;AAOTC,MAAAA,KAAK,EAAK;AAPD,KAAX;AAUA,UAAM3B,IAAI,GAAE,KAAKH,KAAL,CAAWG,IAAvB;AACA,UAAMC,KAAK,GAAE,KAAKJ,KAAL,CAAWI,KAAxB;AACA,UAAMC,QAAQ,GAAE,KAAKL,KAAL,CAAWK,QAA3B;AACA,UAAMC,QAAQ,GAAE,KAAKN,KAAL,CAAWM,QAA3B;AACA,UAAMC,QAAQ,GAAE,KAAKP,KAAL,CAAWO,QAA3B;AACA,UAAMC,WAAW,GAAE,KAAKR,KAAL,CAAWQ,WAA9B;AAEA,QAAIY,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBnB,IAAxB;AACAiB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBlB,KAAzB;AACAgB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BjB,QAA1B;AACAe,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BhB,QAA5B;AACAc,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4Bf,QAA5B;AACAa,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+Bd,WAA/B;AAKAb,IAAAA,KAAK,CAACoC,IAAN,CAAW,uCAAX,EAAmDX,QAAnD,EAA4DG,IAA5D,EACCS,IADD,CACMC,QAAQ,IAAI;AAChBK,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACE,IAArB;AACD,KAHD,EAICK,KAJD,CAIOC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,WAAKtB,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAC;AADI,OAAd;AAGD,KATD;AAWD;AACD;;;AACAiC,EAAAA,gBAAgB,GAAE;AAChB,QAAIzC,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIyC,WAAW,GAAG,IAAlB,CAHgB,CAKhB;;AACA,QAAG,CAAC1C,MAAM,CAAC,MAAD,CAAV,EAAmB;AAChB0C,MAAAA,WAAW,GAAG,KAAd;AACAzC,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,mBAAjB;AACF;;AAED,QAAG,OAAOD,MAAM,CAAC,MAAD,CAAb,KAA0B,WAA7B,EAAyC;AACtC,UAAG,CAACA,MAAM,CAAC,MAAD,CAAN,CAAe2C,KAAf,CAAqB,aAArB,CAAJ,EAAwC;AACrCD,QAAAA,WAAW,GAAG,KAAd;AACAzC,QAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,oBAAjB;AACF;AACH,KAhBe,CAkBhB;;;AACA,QAAG,CAACD,MAAM,CAAC,OAAD,CAAV,EAAoB;AACjB0C,MAAAA,WAAW,GAAG,KAAd;AACAzC,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,oBAAlB;AACF;;AAED,QAAG,OAAOD,MAAM,CAAC,OAAD,CAAb,KAA2B,WAA9B,EAA0C;AACvC,UAAI4C,SAAS,GAAG5C,MAAM,CAAC,OAAD,CAAN,CAAgB6C,WAAhB,CAA4B,GAA5B,CAAhB;AACA,UAAIC,UAAU,GAAG9C,MAAM,CAAC,OAAD,CAAN,CAAgB6C,WAAhB,CAA4B,GAA5B,CAAjB;;AAEA,UAAI,EAAED,SAAS,GAAGE,UAAZ,IAA0BF,SAAS,GAAG,CAAtC,IAA2C5C,MAAM,CAAC,OAAD,CAAN,CAAgB+C,OAAhB,CAAwB,IAAxB,KAAiC,CAAC,CAA7E,IAAkFD,UAAU,GAAG,CAA/F,IAAqG9C,MAAM,CAAC,OAAD,CAAN,CAAgBgD,MAAhB,GAAyBF,UAA1B,GAAwC,CAA9I,CAAJ,EAAsJ;AACnJJ,QAAAA,WAAW,GAAG,KAAd;AACAzC,QAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,oBAAlB;AACD;AACL;;AAGJ,QAAG,CAACD,MAAM,CAAC,UAAD,CAAV,EAAuB;AACtB0C,MAAAA,WAAW,GAAG,KAAd;AACAzC,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,uBAArB;AACD;;AACD,QAAG,OAAOD,MAAM,CAAC,UAAD,CAAb,KAA8B,WAAjC,EAA6C;AAC3C,UAAG,CAACA,MAAM,CAAC,UAAD,CAAN,CAAmB2C,KAAnB,CAAyB,UAAzB,CAAJ,EAAyC;AACtCD,QAAAA,WAAW,GAAG,KAAd;AACAzC,QAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,mBAArB;AACF;AACF;;AAGD,QAAG,CAACD,MAAM,CAAC,UAAD,CAAV,EAAuB;AACrB0C,MAAAA,WAAW,GAAG,KAAd;AACAzC,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,uBAArB;AACD;;AAED,QAAG,CAACD,MAAM,CAAC,WAAD,CAAV,EAAwB;AACtB0C,MAAAA,WAAW,GAAG,KAAd;AACAzC,MAAAA,MAAM,CAAC,WAAD,CAAN,GAAsB,+BAAtB;AACD;;AAEG,SAAKiB,QAAL,CAAc;AAACjB,MAAAA,MAAM,EAAEA;AAAT,KAAd;AACA,WAAOyC,WAAP;AACH;;AAEDO,EAAAA,aAAa,CAACjC,CAAD,EAAG;AACXA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAG,KAAKwB,gBAAL,EAAH,EAA2B;AACxBS,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACF,KAFD,MAEK;AACFA,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACF;AAEJ;;AAEDtC,EAAAA,YAAY,CAACuC,KAAD,EAAQnC,CAAR,EAAU;AAClB,QAAIhB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACAA,IAAAA,MAAM,CAACmD,KAAD,CAAN,GAAgBnC,CAAC,CAACoC,MAAF,CAASC,KAAzB;AACA,SAAKnC,QAAL,CAAc;AAAClB,MAAAA;AAAD,KAAd;AACH;;AAGDsD,EAAAA,MAAM,GAAG;AAED,WAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,EAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAKK;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADA,CADL,EAKK;AAAM,MAAA,OAAO,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,MAA/B;AAAsC,MAAA,IAAI,EAAC,MAA3C;AAAkD,MAAA,SAAS,EAAC,OAA5D;AAAoE,MAAA,KAAK,EAAE,KAAKvD,KAAL,CAAWC,MAAX,CAAkB,MAAlB,CAA3E;AAAsG,MAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B,CAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAC2J;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3J,EAC8L;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9L,EAGI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKd,KAAL,CAAWE,MAAX,CAAkBC,IAA9C,CAHJ,CADA,EAMA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,WAAW,EAAC,OAAhC;AAAwC,MAAA,IAAI,EAAC,OAA7C;AAAqD,MAAA,SAAS,EAAC,QAA/D;AAAwE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,MAAX,CAAkB,OAAlB,CAA/E;AAA2G,MAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,OAA7B,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EACiK;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjK,EACoM;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpM,EAGI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKd,KAAL,CAAWE,MAAX,CAAkBE,KAA9C,CAHJ,CANA,EAWA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,WAA/B;AAA2C,MAAA,IAAI,EAAC,UAAhD;AAA2D,MAAA,SAAS,EAAC,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EACoF;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpF,EACuH;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADvH,EAGI;AAAQ,MAAA,OAAO,EAAG,KAAKW,mBAAvB;AAA4C,MAAA,SAAS,EAAC,uBAAtD;AAA8E,MAAA,EAAE,EAAC,gBAAjF;AAAkG,MAAA,IAAI,EAAC,gBAAvG;AAAwH,MAAA,IAAI,EAAC,QAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAIM,KAAKf,KAAL,CAAWU,OAAX,IAAsB,KAAKV,KAAL,CAAWK,QAAX,KAAuB,EAA7C,IAAmDmD,OAJzD,EAKM,KAAKxD,KAAL,CAAWU,OAAX,IAAsB,KAAKV,KAAL,CAAWK,QAAX,KAAuB,EAA7C,IAAmDoD,KALzD,CAXA,EAoBA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,aAA/B;AAA6C,MAAA,IAAI,EAAC,UAAlD;AAA6D,MAAA,SAAS,EAAC,QAAvE;AAAgF,MAAA,KAAK,EAAE,KAAKzD,KAAL,CAAWC,MAAX,CAAkB,UAAlB,CAAvF;AAAsH,MAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA4B,UAA5B,CAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAC8K;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9K,EACiN;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjN,EAGI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKd,KAAL,CAAWE,MAAX,CAAkBI,QAA9C,CAHJ,CApBA,EAyBA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAwB,MAAA,WAAW,EAAC,UAApC;AAA+C,MAAA,IAAI,EAAC,UAApD;AAA+D,MAAA,SAAS,EAAC,OAAzE;AAAiF,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,MAAX,CAAkB,UAAlB,CAAxF;AAAuH,MAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA4B,UAA5B,CAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAC+K;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/K,EACkN;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlN,EAGI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKd,KAAL,CAAWE,MAAX,CAAkBK,QAA9C,CAHJ,CAzBA,EA8BA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,GAAG,EAAC,WAAX;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,WAAW,EAAC,kBAAnD;AAAsE,MAAA,IAAI,EAAC,aAA3E;AAAyF,MAAA,SAAS,EAAC,OAAnG;AAA2G,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,MAAX,CAAkB,WAAlB,CAAlH;AAAkJ,MAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA4B,WAA5B,CAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAC2M;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3M,EAC8O;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9O,EAGI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKd,KAAL,CAAWE,MAAX,CAAkBwD,SAA9C,CAHJ,CA9BA,EAmCI;AAAQ,MAAA,OAAO,EAAE,KAAKR,aAAL,CAAmBpC,IAAnB,CAAwB,IAAxB,CAAjB;AAAgD,MAAA,IAAI,EAAC,QAArD;AAA8D,MAAA,SAAS,EAAC,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArF,EACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,CADJ,CAnCJ,CALL,EA4CK;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACyB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADzB,CA5CL,CALL,CAFF;AA0DD;;AAhR+B;;AAmR1C,MAAM0C,OAAO,GAAI,oBAAC,YAAD;AAAc,EAAA,QAAQ,EAAE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACjB;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADiB,CAAjB;AAIA,MAAMC,KAAK,GAAI,oBAAC,YAAD;AAAc,EAAA,QAAQ,EAAE,IAAxB;AAA8B,EAAA,cAAc,EAAE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACf;AAAM,EAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADe,CAAf;AAGA,eAAe7D,YAAf","sourcesContent":["import React from 'react';\r\nimport '../Registration/Registration.css';\r\nimport { Link } from 'react-router-dom';\r\nimport base64 from 'base-64';\r\nimport FlashMessage from 'react-flash-message';\r\nimport axios from 'axios';\r\nclass Registration extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            name:'',\r\n            email:'',\r\n            mobileno:'',\r\n            verifyno:'',\r\n            password:'',\r\n            re_password:'',\r\n            loading:false,\r\n            message:false,\r\n            request_time:'',\r\n            otp:'',\r\n            // data:[]\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.sendMobileVerifyOtp = this.sendMobileVerifyOtp.bind(this);\r\n        this.RegistrationDetailSend = this.RegistrationDetailSend.bind(this);\r\n      }\r\n \r\n      // handleChange(e) {\r\n      //   this.setState({ [e.target.name]: e.target.value });\r\n      // }\r\n      \r\n      sendMobileVerifyOtp(e) {\r\n        e.preventDefault();\r\n        const mobileno= this.state.mobileno\r\n       \r\n        this.setState({\r\n          loading:true,\r\n          message:true\r\n        })\r\n       // const passdata = mobileno\r\n        let formData = new FormData();\r\n        formData.append('mobile', mobileno);\r\n        let init = {\r\n          method: 'POST',\r\n          headers: { 'content-type': 'multipart/form-data' },\r\n          mode: 'cors',\r\n          cache: 'default',\r\n          dataType: 'json',\r\n          type:     'POST',\r\n          async:    true,\r\n          \r\n        };\r\n\r\n        axios.post('/tps_api/index.php?view=mobile_verify',formData,init)\r\n        .then(response => {\r\n          // const messages =  <FlashMessage duration={2000} persistOnHover={true}>\r\n          // <span className=\"sendmsg\">OTP Send Successfully!!!</span>\r\n          //   </FlashMessage>;\r\n          //alert(response.data.MSG);\r\n          const tm = response.data.request_time;\r\n          const otp = response.data.data;\r\n          //967094\r\n          // var encoded = 'OTY3MDk0';\r\n          var bytes = base64.decode(otp);\r\n          // var text = utf8.decode(bytes);\r\n          console.log(\"decode:->\"+bytes);\r\n        //  const hexString = otp.toString(16);\r\n        //  alert(hexString);\r\n        //   const yourNumber = parseInt(hexString, 16);\r\n        //   alert(yourNumber);\r\n          //formData.append('time', tm);\r\n         // const items = res.data;\r\n          // this.setState({tm});\r\n         // console.log(response.data.request_time);\r\n         // alert(response.data.data2);\r\n          this.setState({\r\n            request_time:tm,\r\n            otp:otp\r\n          });\r\n          // console.log(this.state.request_time)\r\n          // console.log(this.state.otp)\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading:false,\r\n            message:false\r\n\r\n          })\r\n        })\r\n  \r\n      }\r\n\r\n      RegistrationDetailSend(){\r\n        let init = {\r\n          method: 'POST',\r\n          headers: { 'content-type': 'multipart/form-data' },\r\n          mode: 'cors',\r\n          cache: 'default',\r\n          dataType: 'json',\r\n          type:     'POST',\r\n          async:    true,\r\n        };\r\n\r\n        const name= this.state.name\r\n        const email= this.state.email\r\n        const mobileno= this.state.mobileno\r\n        const verifyno= this.state.verifyno\r\n        const password= this.state.password\r\n        const re_password= this.state.re_password\r\n        \r\n        let formData = new FormData();\r\n\r\n        formData.append('name', name);\r\n        formData.append('email', email);\r\n        formData.append('mobile', mobileno);\r\n        formData.append('verifyno', verifyno);\r\n        formData.append('password', password);\r\n        formData.append('re_password', re_password);\r\n        \r\n        \r\n        \r\n       \r\n        axios.post('/tps_api/index.php?view=mobile_verify',formData,init)\r\n        .then(response => {\r\n          console.log(response.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading:false\r\n          })\r\n        })\r\n\r\n      }\r\n      /**VALIDATION REGISTRATION FORM HERE..... */\r\n      handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n   \r\n        //Name\r\n        if(!fields[\"name\"]){\r\n           formIsValid = false;\r\n           errors[\"name\"] = \"*Name is required\";\r\n        }\r\n   \r\n        if(typeof fields[\"name\"] !== \"undefined\"){\r\n           if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"name\"] = \"Only letters Allow\";\r\n           }        \r\n        }\r\n   \r\n        //Email\r\n        if(!fields[\"email\"]){\r\n           formIsValid = false;\r\n           errors[\"email\"] = \"*Email is Required\";\r\n        }\r\n   \r\n        if(typeof fields[\"email\"] !== \"undefined\"){\r\n           let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n           let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n   \r\n           if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n              formIsValid = false;\r\n              errors[\"email\"] = \"Email is not valid\";\r\n            }\r\n       } \r\n       \r\n   \r\n    if(!fields[\"verifyno\"]){\r\n     formIsValid = false;\r\n     errors[\"verifyno\"] = \"*Verify Code Required\";\r\n   } \r\n   if(typeof fields[\"verifyno\"] !== \"undefined\"){\r\n     if(!fields[\"verifyno\"].match(/^[0-9]+$/)){\r\n        formIsValid = false;\r\n        errors[\"verifyno\"] = \"Only Digits Allow\";\r\n     }        \r\n   }\r\n   \r\n   \r\n   if(!fields[\"password\"]){\r\n     formIsValid = false;\r\n     errors[\"password\"] = \"*Password Is Required\";\r\n   } \r\n   \r\n   if(!fields[\"cpassword\"]){\r\n     formIsValid = false;\r\n     errors[\"cpassword\"] = \"*Conform Password Is Required\";\r\n   } \r\n   \r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n   \r\n   contactSubmit(e){\r\n        e.preventDefault();\r\n   \r\n        if(this.handleValidation()){\r\n           alert(\"Form submitted\");\r\n        }else{\r\n           alert(\"Form has errors.\")\r\n        }\r\n   \r\n    }\r\n   \r\n    handleChange(field, e){         \r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n    }\r\n      \r\n\r\n    render() {\r\n    \r\n            return (\r\n              \r\n              <div className=\"register\">\r\n          \r\n                   <div className=\"background1\"></div>\r\n                  <div className=\"background3\"></div>\r\n                {/* {this.loadingOrmessage()} */}\r\n                   <div className=\"registerForm\"> \r\n                        <hgroup>\r\n                        <h1>True Transport Register</h1>\r\n                        {/* <span class=\"icon novi-icon icon-circle icon-bordered icon-lg icon-default mdi mdi-account-multiple-outline\"></span> */}\r\n                        </hgroup>\r\n                        <form encType=\"multipart/form-data\">\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" placeholder=\"Name\" name=\"name\" className=\"tname\" value={this.state.fields[\"name\"]} onChange={this.handleChange.bind(this, \"name\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                            {/* <label>Username</label> */}\r\n                            <span className=\"errorMsg\">{this.state.errors.name}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"email\" placeholder=\"Email\" name=\"email\" className=\"temail\" value={this.state.fields[\"email\"]} onChange={this.handleChange.bind(this, \"email\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                            {/* <label>Username</label> */}\r\n                            <span className=\"errorMsg\">{this.state.errors.email}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" placeholder=\"Mobile No\" name=\"mobileno\" className=\"tmobile\"/><span className=\"highlight\"></span><span className=\"rbar\"></span>\r\n                            {/* <label>Password</label> */}\r\n                            <button onClick= {this.sendMobileVerifyOtp} className=\"btn btn-deluge btn-sm\" id=\"verifymobileno\" name=\"verifymobileno\" type=\"button\">Send OTP</button>\r\n                            { this.state.message && this.state.mobileno !=='' && success}\r\n                            { this.state.message && this.state.mobileno ==='' && error}\r\n                            {/* {  this.state.message ? <span className=\"sendmsg\">OTP Send Successfully!!!</span>:<span className=\"sendmsg\">OTP Send Successfully!!!asdf</span>} */}\r\n                            {/* <span className=\"errorMsg\">{this.state.errors.mobileno}</span> */}\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" placeholder=\"Verify Code\" name=\"verifyno\" className=\"tvcode\" value={this.state.fields[\"verifyno\"]} onChange={this.handleChange.bind(this,\"verifyno\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                            {/* <label>Password</label> */}\r\n                            <span className=\"errorMsg\">{this.state.errors.verifyno}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"password\"  placeholder=\"Password\" name=\"password\" className=\"tpass\" value={this.state.fields[\"password\"]} onChange={this.handleChange.bind(this,\"password\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                            {/* <label>Password</label> */}\r\n                            <span className=\"errorMsg\">{this.state.errors.password}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input ref=\"cpassword\" type=\"password\" placeholder=\"Confirm Password\" name=\"re_password\" className=\"tpass\" value={this.state.fields[\"cpassword\"]} onChange={this.handleChange.bind(this,\"cpassword\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                            {/* <label>Password</label> */}\r\n                            <span className=\"errorMsg\">{this.state.errors.cpassword}</span>\r\n                        </div>\r\n                            <button onClick={this.contactSubmit.bind(this)} type=\"button\" className=\"buttonui \"> <span> Register </span>\r\n                                <div className=\"ripples buttonRipples\"><span className=\"ripplesCircle\"></span></div>\r\n                            </button>     \r\n                        </form>\r\n                        <div className=\"powered\">\r\n                        You have Already Account?<Link to=\"/\" >Login</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n              </div>\r\n            );\r\n          }\r\n}\r\n\r\nconst success =  <FlashMessage duration={2000}>\r\n<span className=\"sendmsg\">OTP Send Successfully!!!</span>\r\n  </FlashMessage>; \r\n\r\nconst error =  <FlashMessage duration={2000} persistOnHover={true}>\r\n<span className=\"errormsg\">Please Enter Mobile Number</span>\r\n  </FlashMessage>; \r\nexport default Registration;"]},"metadata":{},"sourceType":"module"}