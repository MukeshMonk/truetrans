{"ast":null,"code":"var _jsxFileName = \"D:\\\\truetrans\\\\true\\\\src\\\\componets\\\\Registration\\\\Registration.js\";\nimport React from 'react';\nimport '../Registration/Registration.css';\nimport { Link } from 'react-router-dom';\nimport base64 from 'base-64';\nimport FlashMessage from 'react-flash-message';\nimport axios from 'axios';\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {},\n      name: '',\n      email: '',\n      mobileno: '',\n      verifyno: '',\n      password: '',\n      re_password: '',\n      loading: false,\n      message: false,\n      request_time: '',\n      otp: '',\n      username: 'jasonmalfatto@moduscreate.com',\n      // password: '',\n      passwordConfirm: '' // data:[]\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.MobileNoChange = this.MobileNoChange.bind(this);\n    this.sendMobileVerifyOtp = this.sendMobileVerifyOtp.bind(this);\n    this.RegistrationDetailSend = this.RegistrationDetailSend.bind(this);\n  }\n\n  MobileNoChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  sendMobileVerifyOtp(e) {\n    e.preventDefault();\n    const mobileno = this.state.mobileno;\n    this.setState({\n      loading: true,\n      message: true\n    }); // const passdata = mobileno\n\n    let formData = new FormData();\n    formData.append('mobile', mobileno);\n    let init = {\n      method: 'POST',\n      headers: {\n        'content-type': 'multipart/form-data'\n      },\n      mode: 'cors',\n      cache: 'default',\n      dataType: 'json',\n      type: 'POST',\n      async: true\n    };\n    axios.post('/tps_api/index.php?view=mobile_verify', formData, init).then(response => {\n      // const messages =  <FlashMessage duration={2000} persistOnHover={true}>\n      // <span className=\"sendmsg\">OTP Send Successfully!!!</span>\n      //   </FlashMessage>;\n      // console.log(response.data);\n      // alert(response.data.msgcode);\n      const tm = response.data.request_time;\n      const otp = response.data.data; //967094\n      // var encoded = 'OTY3MDk0';\n\n      var bytes = base64.decode(otp); // var text = utf8.decode(bytes);\n\n      console.log(\"decode:->\" + bytes); //formData.append('time', tm);\n      // const items = res.data;\n      // this.setState({tm});\n      // console.log(response.data.request_time);\n      // alert(response.data.data2);\n\n      this.setState({\n        request_time: tm,\n        otp: otp\n      }); // console.log(this.state.request_time)\n      // console.log(this.state.otp)\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        loading: false,\n        message: false\n      });\n    });\n  }\n\n  RegistrationDetailSend(e) {\n    e.preventDefault();\n    let init = {\n      method: 'POST',\n      headers: {\n        'content-type': 'multipart/form-data'\n      },\n      mode: 'cors',\n      cache: 'default',\n      dataType: 'json',\n      type: 'POST',\n      async: true\n    };\n    const name = this.state.name;\n    const email = this.state.email;\n    const mobileno = this.state.mobileno;\n    const verifyno = this.state.verifyno;\n    const password = this.state.password;\n    const re_password = this.state.re_password;\n    let formData = new FormData();\n    formData.append('name', name);\n    formData.append('email', email);\n    formData.append('phone', mobileno);\n    formData.append('verifyno', verifyno);\n    formData.append('pwd', password);\n    formData.append('cpwd', re_password);\n    axios.post('/tps_api/index.php?view=register', formData, init).then(response => {\n      console.log(response.data);\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n  /**VALIDATION REGISTRATION FORM HERE..... */\n  // handleChange(field, e){         \n  //     let fields = this.state.fields;\n  //     fields[field] = e.target.value;        \n  //     this.setState({fields});\n  // }\n\n\n  handleChange(e) {\n    e.target.classList.add('active');\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    this.showInputError(e.target.name);\n  }\n\n  showFormErrors() {\n    const inputs = document.querySelectorAll('input');\n    let isFormValid = true;\n    inputs.forEach(input => {\n      input.classList.add('active');\n      const isInputValid = this.showInputError(input.name);\n\n      if (!isInputValid) {\n        isFormValid = false;\n      }\n    });\n    return isFormValid;\n  }\n\n  showInputError(refName) {\n    const validity = this.refs[refName].validity;\n    const label = document.getElementById(\"\".concat(refName, \"Label\")).textContent;\n    const error = document.getElementById(\"\".concat(refName, \"Error\"));\n    const isPassword = refName.indexOf('password') !== -1;\n    const isPasswordConfirm = refName === 'passwordConfirm';\n\n    if (isPasswordConfirm) {\n      if (this.refs.password.value !== this.refs.passwordConfirm.value) {\n        this.refs.passwordConfirm.setCustomValidity('Passwords do not match');\n      } else {\n        this.refs.passwordConfirm.setCustomValidity('');\n      }\n    }\n\n    if (!validity.valid) {\n      if (validity.valueMissing) {\n        error.textContent = \"\".concat(label, \" is a required field\");\n      } else if (validity.typeMismatch) {\n        error.textContent = \"\".concat(label, \" should be a valid email address\");\n      } else if (isPassword && validity.patternMismatch) {\n        error.textContent = \"\".concat(label, \" should be longer than 4 chars\");\n      } else if (isPasswordConfirm && validity.customError) {\n        error.textContent = 'Passwords do not match';\n      }\n\n      return false;\n    }\n\n    error.textContent = '';\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      novalidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"usernameLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"email\",\n      name: \"username\",\n      ref: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      id: \"usernameError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      name: \"password\",\n      ref: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      pattern: \".{5,}\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      id: \"passwordError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"passwordConfirmLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      name: \"passwordConfirm\",\n      ref: \"passwordConfirm\",\n      value: this.state.passwordConfirm,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      id: \"passwordConfirmError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"submit\")), React.createElement(\"div\", {\n      className: \"background1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"background3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"registerForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"hgroup\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"True Transport Register\")), React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"name\",\n      className: \"tname\",\n      value: this.state.fields[\"name\"],\n      onChange: this.handleChange.bind(this, \"name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, this.state.errors.name)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      className: \"temail\",\n      value: this.state.fields[\"email\"],\n      onChange: this.handleChange.bind(this, \"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.state.errors.email)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Mobile No\",\n      name: \"mobileno\",\n      value: this.state.mobileno,\n      onChange: this.MobileNoChange,\n      className: \"tmobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"rbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.sendMobileVerifyOtp,\n      className: \"btn btn-deluge btn-sm\",\n      id: \"verifymobileno\",\n      name: \"verifymobileno\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Send OTP\"), this.state.message && this.state.mobileno !== '' && success, this.state.message && this.state.mobileno === '' && error), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Verify Code\",\n      name: \"verifyno\",\n      className: \"tvcode\",\n      value: this.state.fields[\"verifyno\"],\n      onChange: this.handleChange.bind(this, \"verifyno\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, this.state.errors.verifyno)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      className: \"tpass\",\n      value: this.state.fields[\"password\"],\n      onChange: this.handleChange.bind(this, \"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, this.state.errors.password)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"cpassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"re_password\",\n      className: \"tpass\",\n      value: this.state.fields[\"cpassword\"],\n      onChange: this.handleChange.bind(this, \"cpassword\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, this.state.errors.cpassword)), React.createElement(\"button\", {\n      onClick: this.RegistrationDetailSend.bind(this),\n      type: \"button\",\n      className: \"buttonui \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \" Register \"), React.createElement(\"div\", {\n      className: \"ripples buttonRipples\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ripplesCircle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"powered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"You have Already Account?\", React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nconst success = React.createElement(FlashMessage, {\n  duration: 2000,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 312\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"sendmsg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 313\n  },\n  __self: this\n}, \"OTP Send Successfully!!!\"));\nconst error = React.createElement(FlashMessage, {\n  duration: 3000,\n  persistOnHover: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 316\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"errormsg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 317\n  },\n  __self: this\n}, \"Please Enter Mobile Number\"));\nexport default Registration;","map":{"version":3,"sources":["D:\\truetrans\\true\\src\\componets\\Registration\\Registration.js"],"names":["React","Link","base64","FlashMessage","axios","Registration","Component","constructor","props","state","fields","errors","name","email","mobileno","verifyno","password","re_password","loading","message","request_time","otp","username","passwordConfirm","handleChange","bind","MobileNoChange","sendMobileVerifyOtp","RegistrationDetailSend","e","setState","target","value","preventDefault","formData","FormData","append","init","method","headers","mode","cache","dataType","type","async","post","then","response","tm","data","bytes","decode","console","log","catch","err","classList","add","showInputError","showFormErrors","inputs","document","querySelectorAll","isFormValid","forEach","input","isInputValid","refName","validity","refs","label","getElementById","textContent","error","isPassword","indexOf","isPasswordConfirm","setCustomValidity","valid","valueMissing","typeMismatch","patternMismatch","customError","render","handleSubmit","success","cpassword"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../Registration/Registration.css';\r\nimport { Link } from 'react-router-dom';\r\nimport base64 from 'base-64';\r\nimport FlashMessage from 'react-flash-message';\r\nimport axios from 'axios';\r\nclass Registration extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            name:'',\r\n            email:'',\r\n            mobileno:'',\r\n            verifyno:'',\r\n            password:'',\r\n            re_password:'',\r\n            loading:false,\r\n            message:false,\r\n            request_time:'',\r\n            otp:'',\r\n            username: 'jasonmalfatto@moduscreate.com',\r\n     // password: '',\r\n      passwordConfirm: ''\r\n            // data:[]\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.MobileNoChange = this.MobileNoChange.bind(this);\r\n        this.sendMobileVerifyOtp = this.sendMobileVerifyOtp.bind(this);\r\n        this.RegistrationDetailSend = this.RegistrationDetailSend.bind(this);\r\n      }\r\n \r\n      MobileNoChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n      \r\n      sendMobileVerifyOtp(e) {\r\n        e.preventDefault();\r\n        const mobileno= this.state.mobileno\r\n       \r\n        this.setState({\r\n          loading:true,\r\n          message:true\r\n        })\r\n       // const passdata = mobileno\r\n        let formData = new FormData();\r\n        formData.append('mobile', mobileno);\r\n        let init = {\r\n          method: 'POST',\r\n          headers: { 'content-type': 'multipart/form-data' },\r\n          mode: 'cors',\r\n          cache: 'default',\r\n          dataType: 'json',\r\n          type:     'POST',\r\n          async:    true,\r\n          \r\n        };\r\n\r\n        axios.post('/tps_api/index.php?view=mobile_verify',formData,init)\r\n        .then(response => {\r\n          // const messages =  <FlashMessage duration={2000} persistOnHover={true}>\r\n          // <span className=\"sendmsg\">OTP Send Successfully!!!</span>\r\n          //   </FlashMessage>;\r\n          // console.log(response.data);\r\n          // alert(response.data.msgcode);\r\n          const tm = response.data.request_time;\r\n          const otp = response.data.data;\r\n          //967094\r\n          // var encoded = 'OTY3MDk0';\r\n          var bytes = base64.decode(otp);\r\n          // var text = utf8.decode(bytes);\r\n          console.log(\"decode:->\"+bytes);\r\n       \r\n          //formData.append('time', tm);\r\n         // const items = res.data;\r\n          // this.setState({tm});\r\n         // console.log(response.data.request_time);\r\n         // alert(response.data.data2);\r\n          this.setState({\r\n            request_time:tm,\r\n            otp:otp\r\n          });\r\n          // console.log(this.state.request_time)\r\n          // console.log(this.state.otp)\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading:false,\r\n            message:false\r\n\r\n          })\r\n        })\r\n  \r\n      }\r\n\r\n      RegistrationDetailSend(e){\r\n        e.preventDefault();\r\n          let init = {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'multipart/form-data' },\r\n            mode: 'cors',\r\n            cache: 'default',\r\n            dataType: 'json',\r\n            type:     'POST',\r\n            async:    true,\r\n          };\r\n          \r\n         const name= this.state.name\r\n          const email= this.state.email\r\n          const mobileno= this.state.mobileno\r\n          const verifyno= this.state.verifyno\r\n          const password= this.state.password\r\n          const re_password= this.state.re_password\r\n\r\n          let formData = new FormData();\r\n  \r\n          formData.append('name', name);\r\n          formData.append('email', email);\r\n          formData.append('phone', mobileno);\r\n          formData.append('verifyno', verifyno);\r\n          formData.append('pwd', password);\r\n          formData.append('cpwd', re_password);\r\n\r\n          \r\n        axios.post('/tps_api/index.php?view=register',formData,init)\r\n        .then(response => {\r\n          console.log(response.data)\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading:false\r\n          })\r\n        })\r\n\r\n         \r\n       \r\n\r\n      }\r\n      /**VALIDATION REGISTRATION FORM HERE..... */\r\n\r\n   \r\n    // handleChange(field, e){         \r\n    //     let fields = this.state.fields;\r\n    //     fields[field] = e.target.value;        \r\n    //     this.setState({fields});\r\n    // }\r\n\r\n    handleChange(e) {\r\n      e.target.classList.add('active');\r\n      \r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n      \r\n      this.showInputError(e.target.name);\r\n    }\r\n     \r\n    showFormErrors() {\r\n      const inputs = document.querySelectorAll('input');\r\n      let isFormValid = true;\r\n      \r\n      inputs.forEach(input => {\r\n        input.classList.add('active');\r\n        \r\n        const isInputValid = this.showInputError(input.name);\r\n        \r\n        if (!isInputValid) {\r\n          isFormValid = false;\r\n        }\r\n      });\r\n      \r\n      return isFormValid;\r\n    }\r\n    \r\n    showInputError(refName) {\r\n      const validity = this.refs[refName].validity;\r\n      const label = document.getElementById(`${refName}Label`).textContent;\r\n      const error = document.getElementById(`${refName}Error`);\r\n      const isPassword = refName.indexOf('password') !== -1;\r\n      const isPasswordConfirm = refName === 'passwordConfirm';\r\n      \r\n      if (isPasswordConfirm) {\r\n        if (this.refs.password.value !== this.refs.passwordConfirm.value) {\r\n          this.refs.passwordConfirm.setCustomValidity('Passwords do not match');\r\n        } else {\r\n          this.refs.passwordConfirm.setCustomValidity('');\r\n        }\r\n      }\r\n          \r\n      if (!validity.valid) {\r\n        if (validity.valueMissing) {\r\n          error.textContent = `${label} is a required field`; \r\n        } else if (validity.typeMismatch) {\r\n          error.textContent = `${label} should be a valid email address`; \r\n        } else if (isPassword && validity.patternMismatch) {\r\n          error.textContent = `${label} should be longer than 4 chars`; \r\n        } else if (isPasswordConfirm && validity.customError) {\r\n          error.textContent = 'Passwords do not match';\r\n        }\r\n        return false;\r\n      }\r\n      \r\n      error.textContent = '';\r\n      return true;\r\n    }\r\n  \r\n\r\n    render() {\r\n    \r\n            return (\r\n              \r\n              <div className=\"register\">\r\n            <form novalidate>\r\n        <div className=\"form-group\">\r\n          <label id=\"usernameLabel\">Username</label>\r\n          <input className=\"form-control\"\r\n            type=\"email\"\r\n            name=\"username\"\r\n            ref=\"username\"\r\n            value={ this.state.username } \r\n            onChange={ this.handleChange }\r\n            required />\r\n          <div className=\"error\" id=\"usernameError\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          \r\n          <input className=\"form-control\"\r\n            type=\"password\" \r\n            name=\"password\"\r\n            ref=\"password\"\r\n            value={ this.state.password } \r\n            onChange={ this.handleChange }\r\n            pattern=\".{5,}\"\r\n            required />\r\n          <div className=\"error\" id=\"passwordError\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label id=\"passwordConfirmLabel\">Confirm Password</label>\r\n          <input className=\"form-control\"\r\n            type=\"password\" \r\n            name=\"passwordConfirm\"\r\n            ref=\"passwordConfirm\"\r\n            value={ this.state.passwordConfirm } \r\n            onChange={ this.handleChange }\r\n            required />\r\n          <div className=\"error\" id=\"passwordConfirmError\" />\r\n        </div>\r\n        <button className=\"btn btn-primary\"\r\n          onClick={ this.handleSubmit }>submit</button>\r\n      </form>\r\n                   <div className=\"background1\"></div>\r\n                  <div className=\"background3\"></div>\r\n                {/* {this.loadingOrmessage()} */}\r\n                   <div className=\"registerForm\"> \r\n                        <hgroup>\r\n                        <h1>True Transport Register</h1>\r\n                        {/* <span class=\"icon novi-icon icon-circle icon-bordered icon-lg icon-default mdi mdi-account-multiple-outline\"></span> */}\r\n                        </hgroup>\r\n                        <form encType=\"multipart/form-data\">\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" placeholder=\"Name\" name=\"name\" className=\"tname\" value={this.state.fields[\"name\"]} onChange={this.handleChange.bind(this, \"name\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                          \r\n                            <span className=\"errorMsg\">{this.state.errors.name}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"email\" placeholder=\"Email\" name=\"email\" className=\"temail\" value={this.state.fields[\"email\"]} onChange={this.handleChange.bind(this, \"email\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                           \r\n                            <span className=\"errorMsg\">{this.state.errors.email}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" placeholder=\"Mobile No\" name=\"mobileno\" value={this.state.mobileno} onChange={this.MobileNoChange} className=\"tmobile\"/><span className=\"highlight\"></span><span className=\"rbar\"></span>\r\n                         \r\n                            <button onClick= {this.sendMobileVerifyOtp} className=\"btn btn-deluge btn-sm\" id=\"verifymobileno\" name=\"verifymobileno\" type=\"button\">Send OTP</button>\r\n                            { this.state.message && this.state.mobileno !=='' && success}\r\n                            { this.state.message && this.state.mobileno ==='' && error}\r\n                           \r\n                            {/* <span className=\"errorMsg\">{this.state.errors.mobileno}</span> */}\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" placeholder=\"Verify Code\" name=\"verifyno\" className=\"tvcode\" value={this.state.fields[\"verifyno\"]} onChange={this.handleChange.bind(this,\"verifyno\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                           \r\n                            <span className=\"errorMsg\">{this.state.errors.verifyno}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"password\"  placeholder=\"Password\" name=\"password\" className=\"tpass\" value={this.state.fields[\"password\"]} onChange={this.handleChange.bind(this,\"password\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                            \r\n                            <span className=\"errorMsg\">{this.state.errors.password}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input ref=\"cpassword\" type=\"password\" placeholder=\"Confirm Password\" name=\"re_password\" className=\"tpass\" value={this.state.fields[\"cpassword\"]} onChange={this.handleChange.bind(this,\"cpassword\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                          \r\n                            <span className=\"errorMsg\">{this.state.errors.cpassword}</span>\r\n                        </div>\r\n                            <button onClick={this.RegistrationDetailSend.bind(this)} type=\"button\" className=\"buttonui \"> <span> Register </span>\r\n                                <div className=\"ripples buttonRipples\"><span className=\"ripplesCircle\"></span></div>\r\n                            </button>     \r\n                        </form>\r\n                        <div className=\"powered\">\r\n                        You have Already Account?<Link to=\"/\" >Login</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n              </div>\r\n            );\r\n          }\r\n}\r\n\r\nconst success =  <FlashMessage duration={2000}>\r\n<span className=\"sendmsg\">OTP Send Successfully!!!</span>\r\n  </FlashMessage>; \r\n\r\nconst error =  <FlashMessage duration={3000} persistOnHover={true}>\r\n<span className=\"errormsg\">Please Enter Mobile Number</span>\r\n  </FlashMessage>; \r\nexport default Registration;"]},"metadata":{},"sourceType":"module"}