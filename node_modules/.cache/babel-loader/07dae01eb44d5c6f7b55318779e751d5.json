{"ast":null,"code":"var _jsxFileName = \"D:\\\\truetrans\\\\true\\\\src\\\\componets\\\\Registration\\\\Registration.js\";\nimport React from 'react';\nimport '../Registration/Registration.css';\nimport { Link } from 'react-router-dom';\nimport base64 from 'base-64';\nimport FlashMessage from 'react-flash-message';\nimport axios from 'axios';\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {},\n      mobileno: '',\n      loading: false,\n      message: false,\n      request_time: '',\n      otp: '',\n      msgcode: '',\n      msg: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.MobileNoChange = this.MobileNoChange.bind(this);\n    this.sendMobileVerifyOtp = this.sendMobileVerifyOtp.bind(this);\n    this.RegistrationDetailSend = this.RegistrationDetailSend.bind(this);\n  }\n\n  MobileNoChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  sendMobileVerifyOtp(e) {\n    e.preventDefault();\n    const mobileno = this.state.mobileno;\n    this.setState({\n      loading: true,\n      message: true\n    }); // const passdata = mobileno\n\n    let formData = new FormData();\n    formData.append('mobile', mobileno);\n    let init = {\n      method: 'POST',\n      headers: {\n        'content-type': 'multipart/form-data'\n      },\n      mode: 'cors',\n      cache: 'default',\n      dataType: 'json',\n      type: 'POST',\n      async: true\n    };\n    axios.post('/tps_api/index.php?view=mobile_verify', formData, init).then(response => {\n      const tm = response.data.request_time;\n      const otp = response.data.data;\n      const msg = response.data.MSG; // alert(msg);\n      //var bytes = base64.decode(otp);\n\n      this.setState({\n        request_time: tm,\n        otp: otp,\n        msg: msg,\n        msgcode: response.data.msgcode\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        loading: false,\n        message: false\n      });\n    });\n  }\n\n  RegistrationDetailSend(e) {\n    e.preventDefault(); // alert(this.state.mobileno);\n\n    if (this.handleValidation()) {\n      var bytes = base64.decode(this.state.otp);\n\n      if (bytes !== this.state.fields.verifyno) {\n        alert('OTP NOT VALID PLEASE CHECK YOUR OTP');\n        return false;\n      }\n\n      let init = {\n        method: 'POST',\n        headers: {\n          'content-type': 'multipart/form-data'\n        },\n        mode: 'cors',\n        cache: 'default',\n        dataType: 'json',\n        type: 'POST',\n        async: true\n      };\n      const name = this.state.fields.name;\n      const email = this.state.fields.email;\n      const mobileno = this.state.mobileno; // const verifyno= this.state.fields.verifyno\n\n      const password = this.state.fields.password;\n      const re_password = this.state.fields.cpassword;\n\n      if (password !== re_password) {\n        alert(\"Password Does Not Match\");\n        return false;\n      }\n\n      let formData = new FormData();\n      formData.append('name', name);\n      formData.append('email', email);\n      formData.append('phone', mobileno); // formData.append('verifyno', verifyno);\n\n      formData.append('pwd', password);\n      formData.append('cpwd', re_password);\n      formData.append('request_time', this.state.request_time);\n      axios.post('/tps_api/index.php?view=register', formData, init).then(response => {\n        const company_id = response.data.tpsData.company_id;\n        alert(company_id); // if(response.data.msgcode === 0){\n        //   alert(response.data.msgcode);\n        //   this.props.history.push(\"/dashboard\");\n        //  }else{\n        //     alert(\"Invalid username or Password\");\n        // }\n      }).catch(err => {\n        console.log(err);\n      });\n      this.props.history.push(\"/\");\n    } else {\n      alert(\"Please Fill Up Fields\");\n      this.props.history.push(\"/register\");\n    }\n  }\n  /**VALIDATION REGISTRATION FORM HERE..... */\n\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Name\n\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"*Name is required\";\n    }\n\n    if (typeof fields[\"name\"] !== \"undefined\") {\n      if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"name\"] = \"Only letters Allow\";\n      }\n    } //Email\n\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"*Email is Required\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n\n    if (!fields[\"verifyno\"]) {\n      formIsValid = false;\n      errors[\"verifyno\"] = \"*Verify Code Required\";\n    }\n\n    if (typeof fields[\"verifyno\"] !== \"undefined\") {\n      if (!fields[\"verifyno\"].match(/^[0-9]+$/)) {\n        formIsValid = false;\n        errors[\"verifyno\"] = \"Only Digits Allow\";\n      }\n    }\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"*Password Is Required\";\n    }\n\n    if (!fields[\"cpassword\"]) {\n      formIsValid = false;\n      errors[\"cpassword\"] = \"*Conform Password Is Required\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    }); //console.log(fields)\n  }\n\n  render() {\n    const error = React.createElement(FlashMessage, {\n      duration: 3000,\n      persistOnHover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"errormsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.state.msg));\n    const success = React.createElement(FlashMessage, {\n      duration: 2000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sendmsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.state.msg)); // const password= this.state.fields.password\n    // const re_password= this.state.fields.cpassword\n    // var bytes = base64.decode(this.state.otp);\n\n    return React.createElement(\"div\", {\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"background1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"background3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"registerForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"hgroup\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"True Transport Register\")), React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"name\",\n      className: \"tname\",\n      value: this.state.fields[\"name\"],\n      onChange: this.handleChange.bind(this, \"name\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, this.state.errors.name)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      className: \"temail\",\n      value: this.state.fields[\"email\"],\n      onChange: this.handleChange.bind(this, \"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.state.errors.email)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Mobile No\",\n      name: \"mobileno\",\n      value: this.state.mobileno,\n      onChange: this.MobileNoChange,\n      className: \"tmobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"rbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.sendMobileVerifyOtp,\n      className: \"btn btn-deluge btn-sm\",\n      id: \"verifymobileno\",\n      name: \"verifymobileno\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Send OTP\"), this.state.msgcode == 0 && this.state.message ? success : this.state.message && this.state.msgcode == 1 ? error : ''), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Verify Code\",\n      name: \"verifyno\",\n      className: \"tvcode\",\n      value: this.state.fields[\"verifyno\"],\n      onChange: this.handleChange.bind(this, \"verifyno\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, this.state.errors.verifyno)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      className: \"tpass\",\n      value: this.state.fields[\"password\"],\n      onChange: this.handleChange.bind(this, \"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, this.state.errors.password)), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: \"cpassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"cpassword\",\n      className: \"tpass\",\n      value: this.state.fields[\"cpassword\"],\n      onChange: this.handleChange.bind(this, \"cpassword\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"errorMsg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.state.errors.cpassword)), React.createElement(\"button\", {\n      onClick: this.RegistrationDetailSend.bind(this),\n      type: \"button\",\n      className: \"buttonui \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \" Register \"), React.createElement(\"div\", {\n      className: \"ripples buttonRipples\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ripplesCircle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"powered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"You have Already Account ? \", React.createElement(Link, {\n      to: \"/\",\n      className: \"link_login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n} // const passwordNotMatch =  <FlashMessage duration={3000} persistOnHover={true}>\n// <span className=\"errormsg\">Please Enter Mobile Number</span>\n//   </FlashMessage>; \n\n\nexport default Registration;","map":{"version":3,"sources":["D:\\truetrans\\true\\src\\componets\\Registration\\Registration.js"],"names":["React","Link","base64","FlashMessage","axios","Registration","Component","constructor","props","state","fields","errors","mobileno","loading","message","request_time","otp","msgcode","msg","handleChange","bind","MobileNoChange","sendMobileVerifyOtp","RegistrationDetailSend","e","setState","target","name","value","preventDefault","formData","FormData","append","init","method","headers","mode","cache","dataType","type","async","post","then","response","tm","data","MSG","catch","err","console","log","handleValidation","bytes","decode","verifyno","alert","email","password","re_password","cpassword","company_id","tpsData","history","push","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","field","render","error","success"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../Registration/Registration.css';\r\nimport { Link } from 'react-router-dom';\r\nimport base64 from 'base-64';\r\nimport FlashMessage from 'react-flash-message';\r\nimport axios from 'axios';\r\nclass Registration extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n             mobileno:'',\r\n            loading:false,\r\n            message:false,\r\n            request_time:'',\r\n            otp:'',\r\n            msgcode:'',\r\n            msg:''\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.MobileNoChange = this.MobileNoChange.bind(this);\r\n        this.sendMobileVerifyOtp = this.sendMobileVerifyOtp.bind(this);\r\n        this.RegistrationDetailSend = this.RegistrationDetailSend.bind(this);\r\n      }\r\n \r\n      MobileNoChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n      \r\n      sendMobileVerifyOtp(e) {\r\n        e.preventDefault();\r\n        const mobileno= this.state.mobileno\r\n       \r\n        this.setState({\r\n          loading:true,\r\n          message:true\r\n        })\r\n       // const passdata = mobileno\r\n        let formData = new FormData();\r\n        formData.append('mobile', mobileno);\r\n        let init = {\r\n          method: 'POST',\r\n          headers: { 'content-type': 'multipart/form-data' },\r\n          mode: 'cors',\r\n          cache: 'default',\r\n          dataType: 'json',\r\n          type:     'POST',\r\n          async:    true,\r\n          \r\n        };\r\n\r\n        axios.post('/tps_api/index.php?view=mobile_verify',formData,init)\r\n        .then(response => {\r\n          \r\n          const tm = response.data.request_time;\r\n          const otp = response.data.data;\r\n          const msg = response.data.MSG;\r\n         // alert(msg);\r\n         \r\n          //var bytes = base64.decode(otp);\r\n          \r\n          this.setState({\r\n            request_time:tm,\r\n            otp:otp,\r\n            msg:msg,\r\n            msgcode:response.data.msgcode\r\n          });\r\n          \r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading:false,\r\n            message:false\r\n\r\n          })\r\n        })\r\n  \r\n      }\r\n\r\n      RegistrationDetailSend(e){\r\n        e.preventDefault();\r\n          // alert(this.state.mobileno);\r\n        if(this.handleValidation()){\r\n\r\n          var bytes = base64.decode(this.state.otp);\r\n\r\n          if(bytes !== this.state.fields.verifyno){\r\n             alert ('OTP NOT VALID PLEASE CHECK YOUR OTP');\r\n            return false;\r\n          }\r\n\r\n          let init = {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'multipart/form-data' },\r\n            mode: 'cors',\r\n            cache: 'default',\r\n            dataType: 'json',\r\n            type:     'POST',\r\n            async:    true,\r\n          };\r\n          \r\n          const name= this.state.fields.name\r\n          const email= this.state.fields.email\r\n          const mobileno= this.state.mobileno\r\n          // const verifyno= this.state.fields.verifyno\r\n          const password= this.state.fields.password\r\n          const re_password= this.state.fields.cpassword\r\n          \r\n          if(password !== re_password){\r\n            alert(\"Password Does Not Match\");\r\n            return false;\r\n          }\r\n          let formData = new FormData();\r\n  \r\n          formData.append('name', name);\r\n          formData.append('email', email);\r\n          formData.append('phone', mobileno);\r\n          // formData.append('verifyno', verifyno);\r\n          formData.append('pwd', password);\r\n          formData.append('cpwd', re_password);\r\n\r\n          formData.append('request_time', this.state.request_time);\r\n        axios.post('/tps_api/index.php?view=register',formData,init)\r\n        .then(response => {\r\n          const company_id = response.data.tpsData.company_id;\r\n          alert(company_id);\r\n          // if(response.data.msgcode === 0){\r\n          //   alert(response.data.msgcode);\r\n          //   this.props.history.push(\"/dashboard\");\r\n          //  }else{\r\n          //     alert(\"Invalid username or Password\");\r\n             \r\n          // }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n        this.props.history.push(\"/\");\r\n       }else{\r\n         alert(\"Please Fill Up Fields\");\r\n         this.props.history.push(\"/register\");\r\n       }\r\n        \r\n\r\n      }\r\n     \r\n      /**VALIDATION REGISTRATION FORM HERE..... */\r\n      handleValidation(){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n   \r\n        //Name\r\n        if(!fields[\"name\"]){\r\n           formIsValid = false;\r\n           errors[\"name\"] = \"*Name is required\";\r\n        }\r\n   \r\n        if(typeof fields[\"name\"] !== \"undefined\"){\r\n           if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\r\n              formIsValid = false;\r\n              errors[\"name\"] = \"Only letters Allow\";\r\n           }        \r\n        }\r\n   \r\n        //Email\r\n        if(!fields[\"email\"]){\r\n           formIsValid = false;\r\n           errors[\"email\"] = \"*Email is Required\";\r\n        }\r\n   \r\n        if(typeof fields[\"email\"] !== \"undefined\"){\r\n           let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n           let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n   \r\n           if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n              formIsValid = false;\r\n              errors[\"email\"] = \"Email is not valid\";\r\n            }\r\n       } \r\n       \r\n   \r\n    if(!fields[\"verifyno\"]){\r\n     formIsValid = false;\r\n     errors[\"verifyno\"] = \"*Verify Code Required\";\r\n   } \r\n   if(typeof fields[\"verifyno\"] !== \"undefined\"){\r\n     if(!fields[\"verifyno\"].match(/^[0-9]+$/)){\r\n        formIsValid = false;\r\n        errors[\"verifyno\"] = \"Only Digits Allow\";\r\n     }        \r\n   }\r\n   \r\n   \r\n   if(!fields[\"password\"]){\r\n     formIsValid = false;\r\n     errors[\"password\"] = \"*Password Is Required\";\r\n   } \r\n   \r\n   if(!fields[\"cpassword\"]){\r\n     formIsValid = false;\r\n     errors[\"cpassword\"] = \"*Conform Password Is Required\";\r\n   } \r\n   \r\n       this.setState({errors: errors});\r\n       return formIsValid;\r\n   }\r\n   \r\n  \r\n    handleChange(field, e){         \r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n        //console.log(fields)\r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n      const error =  <FlashMessage duration={3000} persistOnHover={true}>\r\n      <span className=\"errormsg\">{this.state.msg}</span>\r\n        </FlashMessage>;\r\n\r\n      const success =  <FlashMessage duration={2000}>\r\n      <span className=\"sendmsg\">{this.state.msg}</span>\r\n        </FlashMessage>; \r\n      // const password= this.state.fields.password\r\n      // const re_password= this.state.fields.cpassword\r\n      // var bytes = base64.decode(this.state.otp);\r\n            return (\r\n              \r\n              <div className=\"register\">\r\n          \r\n                   <div className=\"background1\"></div>\r\n                  <div className=\"background3\"></div>\r\n                {/* {this.loadingOrmessage()} */}\r\n                   <div className=\"registerForm\"> \r\n                        <hgroup>\r\n                        <h1>True Transport Register</h1>\r\n                        {/* <span class=\"icon novi-icon icon-circle icon-bordered icon-lg icon-default mdi mdi-account-multiple-outline\"></span> */}\r\n                        </hgroup>\r\n                        <form encType=\"multipart/form-data\">\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" placeholder=\"Name\" name=\"name\" className=\"tname\" value={this.state.fields[\"name\"]} onChange={this.handleChange.bind(this, \"name\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                          \r\n                            <span className=\"errorMsg\">{this.state.errors.name}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"email\" placeholder=\"Email\" name=\"email\" className=\"temail\" value={this.state.fields[\"email\"]} onChange={this.handleChange.bind(this, \"email\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                           \r\n                            <span className=\"errorMsg\">{this.state.errors.email}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" placeholder=\"Mobile No\" name=\"mobileno\" value={this.state.mobileno} onChange={this.MobileNoChange} className=\"tmobile\"/><span className=\"highlight\"></span><span className=\"rbar\"></span>\r\n                         \r\n                            <button onClick= {this.sendMobileVerifyOtp} className=\"btn btn-deluge btn-sm\" id=\"verifymobileno\" name=\"verifymobileno\" type=\"button\">Send OTP</button>\r\n                            { this.state.msgcode==0 && this.state.message ? success :this.state.message && this.state.msgcode==1 ? error :''}\r\n                         \r\n                           \r\n                            {/* <span className=\"errorMsg\">{this.state.errors.mobileno}</span> */}\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"text\" placeholder=\"Verify Code\" name=\"verifyno\" className=\"tvcode\" value={this.state.fields[\"verifyno\"]} onChange={this.handleChange.bind(this,\"verifyno\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                            <span className=\"errorMsg\">{this.state.errors.verifyno}</span>\r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input type=\"password\"  placeholder=\"Password\" name=\"password\" className=\"tpass\" value={this.state.fields[\"password\"]} onChange={this.handleChange.bind(this,\"password\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                            <span className=\"errorMsg\">{this.state.errors.password}</span>\r\n                           \r\n                        </div>\r\n                        <div className=\"group\">\r\n                            <input ref=\"cpassword\" type=\"password\" placeholder=\"Confirm Password\" name=\"cpassword\" className=\"tpass\" value={this.state.fields[\"cpassword\"]} onChange={this.handleChange.bind(this,\"cpassword\")}/><span className=\"highlight\"></span><span className=\"bar\"></span>\r\n                            <span className=\"errorMsg\">{this.state.errors.cpassword}</span>\r\n                            {/* {(password !== re_password && re_password !=='')  ? passwordNotMatch:''} */}\r\n                          \r\n                        </div>\r\n                            <button onClick={this.RegistrationDetailSend.bind(this)} type=\"button\" className=\"buttonui \"> <span> Register </span>\r\n                                <div className=\"ripples buttonRipples\"><span className=\"ripplesCircle\"></span></div>\r\n                            </button>     \r\n                        </form>\r\n                        <div className=\"powered\">\r\n                        You have Already Account ? <Link to=\"/\" className=\"link_login\">Login</Link>\r\n                        </div>\r\n\r\n                    </div>\r\n              </div>\r\n            );\r\n          }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// const passwordNotMatch =  <FlashMessage duration={3000} persistOnHover={true}>\r\n// <span className=\"errormsg\">Please Enter Mobile Number</span>\r\n//   </FlashMessage>; \r\n\r\n\r\nexport default Registration;"]},"metadata":{},"sourceType":"module"}